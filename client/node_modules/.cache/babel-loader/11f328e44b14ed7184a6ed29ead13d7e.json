{"ast":null,"code":"import _toConsumableArray from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/RoseSamuel/Desktop/RadioChat/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, InputGroup, InputGroupText, InputGroupAddon, Collapse, CardBody, Card, Input, Form, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, Dropdown, DropdownMenu, DropdownToggle, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport * as io from 'socket.io-client';\nvar socket = io.connect('http://localhost:5000');\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      messages: [],\n      input: '',\n      id: '',\n      name: '',\n      userNames: [],\n      location: {\n        latitude: '',\n        longitude: ''\n      },\n      locationInterval: null,\n      collapse: false,\n      dropdownOpen: false\n    };\n    _this.handleSend = _this.handleSend.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.beginLocationEmit = _this.beginLocationEmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleNavbar = _this.toggleNavbar.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate() {\n      var elem = document.getElementById('message-window');\n      elem.scrollTop = elem.scrollHeight;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var current = this;\n      socket.on('chat', function (msg) {\n        current.setState({\n          messages: [].concat(_toConsumableArray(current.state.messages), [msg])\n        });\n      });\n      socket.on('on_connection', function (userInfo) {\n        current.setState({\n          id: userInfo.id,\n          name: userInfo.name\n        }, current.beginLocationEmit());\n      });\n      socket.on('name_update', function (names) {\n        current.setState({\n          userNames: names\n        });\n      });\n    }\n  }, {\n    key: \"beginLocationEmit\",\n    value: function beginLocationEmit() {\n      var current = this;\n      this.setState({\n        locationInterval: setInterval(function () {\n          socket.emit('location_update', {\n            id: current.state.id,\n            location: current.state.location\n          });\n        }, 10000)\n      });\n    }\n  }, {\n    key: \"handleSend\",\n    value: function handleSend(event) {\n      event.preventDefault();\n      socket.emit('chat', this.state.input);\n      this.setState({\n        input: ''\n      });\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState({\n        dropdownOpen: !this.state.dropdownOpen\n      });\n    }\n  }, {\n    key: \"toggleNavbar\",\n    value: function toggleNavbar() {\n      this.setState({\n        collapsed: !this.state.collapsed\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var current = this;\n\n      if (\"geolocation\" in navigator) {\n        navigator.geolocation.getCurrentPosition(function (position) {\n          current.setState({\n            location: {\n              latitude: position.coords.latitude,\n              longitude: position.coords.longitude\n            }\n          });\n        });\n      }\n\n      var messageList = this.state.messages.map(function (x, index) {\n        return React.createElement(\"div\", {\n          id: \"message-item\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, \" \", x, \" \");\n      });\n      var nameList = this.state.userNames.map(function (x, index) {\n        return React.createElement(\"div\", {\n          id: \"name-item\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, \" \", x, \" \");\n      });\n      return React.createElement(\"div\", {\n        id: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        color: \"faded\",\n        light: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(NavbarBrand, {\n        href: \"/\",\n        className: \"mr-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"RadioChat\"), React.createElement(NavbarToggler, {\n        onClick: this.toggleNavbar,\n        className: \"mr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(Collapse, {\n        isOpen: !this.state.collapsed,\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        isOpen: this.state.dropdownOpen,\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        tag: \"span\",\n        onClick: this.toggle,\n        \"data-toggle\": \"dropdown\",\n        \"aria-expanded\": this.state.dropdownOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Change Name\"), React.createElement(DropdownMenu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"danger\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, this.props.buttonLabel), React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        className: this.props.className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Modal title\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Do Something\"), ' ', React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Cancel\"))))))))))), React.createElement(\"div\", {\n        id: \"message-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"message-window\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, messageList), React.createElement(\"div\", {\n        id: \"user-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, nameList), React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        id: \"textInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.input,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            input: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        onClick: this.handleSend,\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Send\"))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/RoseSamuel/Desktop/RadioChat/client/src/App.js"],"names":["React","Component","Button","InputGroup","InputGroupText","InputGroupAddon","Collapse","CardBody","Card","Input","Form","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","Dropdown","DropdownMenu","DropdownToggle","Modal","ModalHeader","ModalBody","ModalFooter","io","socket","connect","App","props","state","messages","input","id","name","userNames","location","latitude","longitude","locationInterval","collapse","dropdownOpen","handleSend","bind","beginLocationEmit","toggleNavbar","toggle","elem","document","getElementById","scrollTop","scrollHeight","current","on","msg","setState","userInfo","names","setInterval","emit","event","preventDefault","collapsed","navigator","geolocation","getCurrentPosition","position","coords","messageList","map","x","index","nameList","buttonLabel","modal","className","e","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Button, InputGroup, InputGroupText, InputGroupAddon,\n    Collapse, CardBody, Card, Input, Form, Navbar,\n    NavbarToggler, NavbarBrand, Nav, NavItem, NavLink,\n    Dropdown, DropdownMenu, DropdownToggle, Modal, ModalHeader,\n    ModalBody, ModalFooter} from 'reactstrap';\nimport * as io from 'socket.io-client';\n\nconst socket = io.connect('http://localhost:5000');\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      messages: [],\n      input: '',\n      id: '',\n      name: '',\n      userNames: [],\n      location: {latitude: '', longitude: ''},\n      locationInterval: null,\n      collapse: false,\n      dropdownOpen: false\n\n    };\n    this.handleSend = this.handleSend.bind(this);\n    this.beginLocationEmit = this.beginLocationEmit.bind(this);\n    this.toggleNavbar = this.toggleNavbar.bind(this);\n    this.toggle = this.toggle.bind(this);\n  }\n  componentWillUpdate(){\n    var elem = document.getElementById('message-window');\n    elem.scrollTop = elem.scrollHeight;\n  }\n  componentDidMount() {\n    let current = this;\n    socket.on('chat', function(msg){\n      current.setState({messages: [...current.state.messages, msg]});\n    });\n\n    socket.on('on_connection', function(userInfo){\n      current.setState({id: userInfo.id, name: userInfo.name}, current.beginLocationEmit());\n    });\n\n    socket.on('name_update', function(names){\n      current.setState({userNames: names});\n    });\n\n  }\n\n  beginLocationEmit() {\n    let current = this;\n    this.setState({locationInterval: setInterval(function(){\n      socket.emit('location_update', {id: current.state.id, location: current.state.location});\n    }, 10000\n\n    )});\n  }\n  handleSend(event) {\n    event.preventDefault();\n    socket.emit('chat', this.state.input);\n    this.setState({input: ''});\n\n  }\n  toggle() {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n  toggleNavbar() {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  }\n\nrender() {\n  let current = this;\n  if (\"geolocation\" in navigator){\n    navigator.geolocation.getCurrentPosition(function(position) {\n      current.setState({location: {\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude\n      }\n    });\n    });\n  }\n    let messageList = this.state.messages.map((x, index) => {\n      return (\n        <div id=\"message-item\" key={index}> {x} </div>\n      );\n    });\n\n    let nameList = this.state.userNames.map((x, index) => {\n      return (\n        <div id=\"name-item\" key={index}> {x} </div>\n      );\n    });\n\n    return (\n      <div id=\"container\">\n      <div>\n      <Navbar color=\"faded\" light>\n        <NavbarBrand href=\"/\" className=\"mr-auto\">RadioChat</NavbarBrand>\n        <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\n        <Collapse isOpen={!this.state.collapsed} navbar>\n          <Nav navbar>\n            <NavItem>\n              <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n                <DropdownToggle\n                tag=\"span\"\n                onClick={this.toggle}\n                data-toggle=\"dropdown\"\n                aria-expanded={this.state.dropdownOpen}\n                >\n                Change Name\n                </DropdownToggle>\n                <DropdownMenu>\n                <div>\n                  <Button color=\"danger\" onClick={this.toggle}>{this.props.buttonLabel}</Button>\n                  <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                    <ModalHeader toggle={this.toggle}>Modal title</ModalHeader>\n                    <ModalBody>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n                    </ModalBody>\n                    <ModalFooter>\n            <Button color=\"primary\" onClick={this.toggle}>Do Something</Button>{' '}\n            <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n                </DropdownMenu>\n              </Dropdown>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </div>\n        <div id=\"message-container\">\n          <div id=\"message-window\">\n            {messageList}\n          </div>\n          <div id=\"user-list\">\n            {nameList}\n          </div>\n          <Form>\n            <InputGroup id='textInput'>\n              <Input value={this.state.input} onChange={e=>this.setState({input: e.target.value})}/>\n              <InputGroupAddon addonType=\"append\"><Button type='submit' onClick={this.handleSend}\n                color=\"secondary\">Send</Button>\n              </InputGroupAddon>\n            </InputGroup>\n          </Form>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}