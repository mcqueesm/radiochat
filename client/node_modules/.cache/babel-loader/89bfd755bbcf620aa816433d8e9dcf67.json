{"ast":null,"code":"import _toConsumableArray from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/RoseSamuel/Desktop/RadioChat/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Alert, Button, InputGroup, InputGroupText, InputGroupAddon, Collapse, CardBody, Card, Input, Form, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, Dropdown, DropdownMenu, DropdownToggle, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport * as io from 'socket.io-client';\nvar socket = io.connect('http://localhost:5000');\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      messages: [],\n      input: '',\n      id: '',\n      name: '',\n      userNames: [],\n      localUsers: [],\n      rooms: [],\n      newName: '',\n      location: {\n        latitude: '',\n        longitude: ''\n      },\n      locationInterval: null,\n      collapse: false,\n      dropdownOpen: false,\n      modal: false,\n      nameSuccess: true,\n      activeName: null,\n      activeRoom: null\n    };\n    _this.handleSend = _this.handleSend.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.beginLocationEmit = _this.beginLocationEmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleNavbar = _this.toggleNavbar.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.modalToggle = _this.modalToggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleNameChange = _this.handleNameChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onDismiss = _this.onDismiss.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.setName = _this.setName.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.selectName = _this.selectName.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleRoomCreation = _this.handleRoomCreation.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.selectRoom = _this.selectRoom.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate() {\n      var elem = document.getElementById('message-window');\n      elem.scrollTop = elem.scrollHeight;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var current = this;\n      /*socket.on('chat', function(msg){\n        current.setState({messages: [...current.state.messages, msg]});\n      });*/\n\n      socket.on('on_connection', function (userInfo) {\n        console.log(\"Client connecting\");\n        current.setState({\n          id: userInfo.id\n        }, function () {\n          current.beginLocationEmit();\n          current.setName(userInfo.name);\n        });\n      });\n      socket.on('room_fail', function () {\n        console.log('This name already exists');\n      });\n      socket.on('name_update', function (names) {\n        current.setState({\n          userNames: names\n        }, function () {\n          console.log(\"Received these names: \", names);\n        });\n      });\n      socket.on('change_name_result', function (result) {\n        if (!result.success) {\n          current.setState({\n            nameSuccess: result.success\n          }, function () {\n            console.log(current.state.nameSuccess);\n          });\n        } else {\n          current.setState({\n            name: result.name\n          }, function () {\n            console.log(\"My name changed to \", current.state.name);\n          });\n        }\n      });\n      socket.on('locals', function (obj) {\n        current.setState({\n          rooms: obj.rooms\n        });\n        var noLonger = current.state.localUsers.filter(function (x) {\n          return !obj.names.includes(x);\n        });\n        var newUsers = obj.names.filter(function (x) {\n          return !current.state.localUsers.includes(x);\n        });\n        console.log('No longer: ', noLonger);\n        console.log('New users: ', newUsers);\n        current.setState({\n          localUsers: obj.names\n        });\n\n        if (noLonger) {\n          noLonger.forEach(function (x) {\n            socket.off(x);\n          });\n\n          if (newUsers) {\n            newUsers.forEach(function (x) {\n              socket.on(x, function (msg) {\n                current.setState({\n                  messages: [].concat(_toConsumableArray(current.state.messages), [msg])\n                });\n              });\n            });\n          }\n        }\n\n        console.log(\"These are my local users: \", current.state.localUsers);\n        console.log(\"These are my local rooms: \", current.state.rooms);\n      });\n      socket.on('private', function (msg) {\n        current.setState({\n          messages: [].concat(_toConsumableArray(current.state.messages), [msg])\n        });\n      });\n    }\n  }, {\n    key: \"setName\",\n    value: function setName(name) {\n      var current = this;\n      current.setState({\n        name: name\n      });\n      /*, () =>{\n      socket.on(name, function(msg){\n      current.setState({messages: [...current.state.messages, msg]});\n      });\n      })*/\n    }\n  }, {\n    key: \"beginLocationEmit\",\n    value: function beginLocationEmit() {\n      var current = this;\n      this.setState({\n        locationInterval: setInterval(function () {\n          socket.emit('location_update', {\n            id: current.state.id,\n            location: current.state.location\n          });\n        }, 3000)\n      });\n    }\n  }, {\n    key: \"handleSend\",\n    value: function handleSend(event) {\n      event.preventDefault(); //socket.emit('chat', this.state.input);\n\n      if (!this.state.activeName) {\n        socket.emit(this.state.name, this.state.input);\n      } else {\n        socket.emit('private', {\n          msg: this.state.input,\n          recipient: this.state.activeName,\n          name: this.state.name\n        });\n      }\n\n      this.setState({\n        input: ''\n      });\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState({\n        dropdownOpen: !this.state.dropdownOpen\n      });\n    }\n  }, {\n    key: \"toggleNavbar\",\n    value: function toggleNavbar() {\n      this.setState({\n        collapsed: !this.state.collapsed\n      });\n    }\n  }, {\n    key: \"modalToggle\",\n    value: function modalToggle() {\n      this.setState({\n        modal: !this.state.modal\n      });\n    }\n  }, {\n    key: \"handleNameChange\",\n    value: function handleNameChange(event) {\n      event.preventDefault();\n      socket.emit('change_name', this.state.newName);\n      this.setState({\n        newName: '',\n        modal: !this.state.modal\n      });\n    }\n  }, {\n    key: \"onDismiss\",\n    value: function onDismiss() {\n      this.setState({\n        nameSuccess: true\n      });\n    }\n  }, {\n    key: \"selectName\",\n    value: function selectName(name) {\n      console.log('in select name, name is ', name);\n      this.setState(function (_ref) {\n        var activeName = _ref.activeName;\n\n        if (activeName === name) {\n          return {\n            activeName: null\n          };\n        }\n\n        return {\n          activeName: name\n        };\n      });\n    }\n  }, {\n    key: \"selectRoom\",\n    value: function selectRoom(name) {\n      this.setState(function (_ref2) {\n        var activeRoom = _ref2.activeRoom;\n\n        if (activeRoom === name) {\n          return {\n            activeRoom: null\n          };\n        }\n\n        socket.emit('join_room', name);\n        return {\n          activeRoom: name\n        };\n      });\n    }\n  }, {\n    key: \"handleRoomCreation\",\n    value: function handleRoomCreation(name) {\n      socket.emit('room_creation', {\n        name: name,\n        location: this.state.location\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var current = this;\n\n      if (\"geolocation\" in navigator) {\n        navigator.geolocation.getCurrentPosition(function (position) {\n          current.setState({\n            location: {\n              latitude: position.coords.latitude,\n              longitude: position.coords.longitude\n            }\n          });\n        });\n      }\n\n      var messageList = this.state.messages.map(function (x, index) {\n        return React.createElement(\"div\", {\n          id: \"message-item\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }, \" \", x, \" \");\n      });\n      var nameList = this.state.localUsers.map(function (x, index) {\n        return React.createElement(ListClickable, {\n          isActive: _this2.state.activeName == x,\n          id: index,\n          key: index,\n          item: x,\n          handleClick: _this2.selectName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        });\n      });\n      var roomList = this.state.rooms.map(function (x, index) {\n        return React.createElement(ListClickable, {\n          isActive: _this2.state.activeRoom == x,\n          id: index,\n          key: index,\n          item: x,\n          handleClick: _this2.selectRoom,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        id: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        color: \"faded\",\n        light: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(NavbarBrand, {\n        href: \"/\",\n        className: \"mr-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"RadioChat\"), React.createElement(NavbarToggler, {\n        onClick: this.toggleNavbar,\n        className: \"mr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }), React.createElement(Collapse, {\n        isOpen: this.state.collapsed,\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onClick: this.modalToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"Change Name\"), React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.modalToggle,\n        className: this.props.className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.modalToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \"Enter new name:\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        id: \"nameInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.newName,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            newName: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        onClick: this.handleNameChange,\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"Submit\")))))), React.createElement(ModalItem, {\n        title: \"Enter room name:\",\n        handleClick: this.handleRoomCreation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      })))), !this.state.nameSuccess ? React.createElement(Alert, {\n        color: \"danger\",\n        isOpen: !this.state.nameSuccess,\n        toggle: this.onDismiss,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"That name is already in use!\") : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"message-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"message-window\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, messageList), React.createElement(\"div\", {\n        id: \"right-panel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"user-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, nameList), React.createElement(\"div\", {\n        id: \"room-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, roomList)), React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        id: \"textInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(Input, {\n        id: \"textField\",\n        value: this.state.input,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            input: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        onClick: this.handleSend,\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"Send\"))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar ModalItem =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(ModalItem, _Component2);\n\n  function ModalItem(props) {\n    var _this3;\n\n    _classCallCheck(this, ModalItem);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(ModalItem).call(this, props));\n    _this3.state = {\n      modal: false,\n      roomName: ''\n    };\n    _this3.modalToggle = _this3.modalToggle.bind(_assertThisInitialized(_assertThisInitialized(_this3)));\n    _this3.handleClick = _this3.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this3)));\n    return _this3;\n  }\n\n  _createClass(ModalItem, [{\n    key: \"handleClick\",\n    value: function handleClick(event) {\n      event.preventDefault();\n      this.props.handleClick(this.state.roomName);\n      this.setState({\n        roomName: ''\n      });\n    }\n  }, {\n    key: \"modalToggle\",\n    value: function modalToggle() {\n      this.setState({\n        modal: !this.state.modal\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onClick: this.modalToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, \"Create Room\"), React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.modalToggle,\n        className: this.props.className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.modalToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, this.props.title), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        id: \"roomInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.roomName,\n        onChange: function onChange(e) {\n          return _this4.setState({\n            roomName: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        onClick: this.handleClick,\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, \"Submit\")))))));\n    }\n  }]);\n\n  return ModalItem;\n}(Component);\n\nvar ListClickable =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(ListClickable, _Component3);\n\n  function ListClickable() {\n    _classCallCheck(this, ListClickable);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ListClickable).apply(this, arguments));\n  }\n\n  _createClass(ListClickable, [{\n    key: \"handleClick\",\n    value: function handleClick(event) {\n      this.props.handleClick(event.target.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return React.createElement(\"div\", {\n        onClick: function onClick(e) {\n          return _this5.handleClick(e);\n        },\n        id: this.props.item,\n        className: this.props.isActive ? 'clickedItem' : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, this.props.item);\n    }\n  }]);\n\n  return ListClickable;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/RoseSamuel/Desktop/RadioChat/client/src/App.js"],"names":["React","Component","Alert","Button","InputGroup","InputGroupText","InputGroupAddon","Collapse","CardBody","Card","Input","Form","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","Dropdown","DropdownMenu","DropdownToggle","Modal","ModalHeader","ModalBody","ModalFooter","io","socket","connect","App","props","state","messages","input","id","name","userNames","localUsers","rooms","newName","location","latitude","longitude","locationInterval","collapse","dropdownOpen","modal","nameSuccess","activeName","activeRoom","handleSend","bind","beginLocationEmit","toggleNavbar","toggle","modalToggle","handleNameChange","onDismiss","setName","selectName","handleRoomCreation","selectRoom","elem","document","getElementById","scrollTop","scrollHeight","current","on","userInfo","console","log","setState","names","result","success","obj","noLonger","filter","x","includes","newUsers","forEach","off","msg","setInterval","emit","event","preventDefault","recipient","collapsed","navigator","geolocation","getCurrentPosition","position","coords","messageList","map","index","nameList","roomList","className","e","target","value","ModalItem","roomName","handleClick","title","ListClickable","item","isActive"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Alert, Button, InputGroup, InputGroupText, InputGroupAddon,\n    Collapse, CardBody, Card, Input, Form, Navbar,\n    NavbarToggler, NavbarBrand, Nav, NavItem, NavLink,\n    Dropdown, DropdownMenu, DropdownToggle, Modal, ModalHeader,\n    ModalBody, ModalFooter} from 'reactstrap';\nimport * as io from 'socket.io-client';\n\nconst socket = io.connect('http://localhost:5000');\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      messages: [],\n      input: '',\n      id: '',\n      name: '',\n      userNames: [],\n      localUsers: [],\n      rooms: [],\n      newName:'',\n      location: {latitude: '', longitude: ''},\n      locationInterval: null,\n      collapse: false,\n      dropdownOpen: false,\n      modal: false,\n      nameSuccess: true,\n      activeName: null,\n      activeRoom: null\n\n    };\n    this.handleSend = this.handleSend.bind(this);\n    this.beginLocationEmit = this.beginLocationEmit.bind(this);\n    this.toggleNavbar = this.toggleNavbar.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.modalToggle = this.modalToggle.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.onDismiss = this.onDismiss.bind(this);\n    this.setName = this.setName.bind(this);\n    this.selectName = this.selectName.bind(this);\n    this.handleRoomCreation = this.handleRoomCreation.bind(this);\n    this.selectRoom = this.selectRoom.bind(this);\n  }\n  componentWillUpdate(){\n    var elem = document.getElementById('message-window');\n    elem.scrollTop = elem.scrollHeight;\n  }\n  componentDidMount() {\n    let current = this;\n    /*socket.on('chat', function(msg){\n      current.setState({messages: [...current.state.messages, msg]});\n    });*/\n\n    socket.on('on_connection', function(userInfo){\n      console.log(\"Client connecting\")\n      current.setState({id: userInfo.id}, () => {\n        current.beginLocationEmit();\n        current.setName(userInfo.name);\n      });\n    });\n    socket.on('room_fail', function(){\n      console.log('This name already exists');\n    });\n\n    socket.on('name_update', function(names){\n      current.setState({userNames: names}, () => {console.log(\"Received these names: \",  names)});\n    });\n\n    socket.on('change_name_result', function(result){\n\n      if (!result.success){\n        current.setState({nameSuccess: result.success}, ()=>{console.log(current.state.nameSuccess)});\n      }\n      else{\n        current.setState({name: result.name}, () => {console.log(\"My name changed to \", current.state.name)});\n      }\n    });\n\n    socket.on('locals', function(obj){\n      current.setState({rooms: obj.rooms});\n      let noLonger = current.state.localUsers.filter(x => !obj.names.includes(x));\n      let newUsers = obj.names.filter(x => !current.state.localUsers.includes(x));\n      console.log('No longer: ', noLonger);\n      console.log('New users: ', newUsers);\n      current.setState({localUsers: obj.names});\n      if (noLonger){\n        noLonger.forEach(x => {\n          socket.off(x);\n        });\n      if (newUsers){\n        newUsers.forEach(x => {\n          socket.on(x, function(msg){\n            current.setState({messages: [...current.state.messages, msg]});\n          });\n        });\n      }\n      }\n      console.log(\"These are my local users: \", current.state.localUsers);\n      console.log(\"These are my local rooms: \", current.state.rooms);\n    });\n\n    socket.on('private', function(msg){\n      current.setState({messages: [...current.state.messages, msg]});\n    });\n\n  }\n  setName(name) {\n    let current = this;\n    current.setState({name: name}) /*, () =>{\n      socket.on(name, function(msg){\n        current.setState({messages: [...current.state.messages, msg]});\n      });\n    })*/\n\n  }\n\n  beginLocationEmit() {\n    let current = this;\n    this.setState({locationInterval: setInterval(function(){\n      socket.emit('location_update', {id: current.state.id, location: current.state.location});\n    }, 3000\n\n    )});\n  }\n  handleSend(event) {\n    event.preventDefault();\n    //socket.emit('chat', this.state.input);\n\n    if(!this.state.activeName){\n      socket.emit(this.state.name, this.state.input);\n    }\n    else{\n      socket.emit('private', {msg: this.state.input, recipient: this.state.activeName,\n        name: this.state.name});\n    }\n    this.setState({input: ''});\n\n  }\n  toggle() {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n  toggleNavbar() {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  }\n  modalToggle() {\n    this.setState({modal: !this.state.modal});\n  }\n  handleNameChange(event) {\n    event.preventDefault();\n    socket.emit('change_name', this.state.newName);\n    this.setState({newName: '', modal: !this.state.modal});\n  }\n  onDismiss() {\n    this.setState({ nameSuccess: true });\n  }\n  selectName(name){\n    console.log('in select name, name is ', name);\n    this.setState( ({activeName}) => {\n      if(activeName===name){\n        return {activeName: null};\n      }\n      return {activeName: name};\n    });\n  }\n  selectRoom(name){\n    this.setState( ({activeRoom}) => {\n      if(activeRoom===name){\n        return {activeRoom: null};\n      }\n      socket.emit('join_room', name);\n      return {activeRoom: name};\n    });\n  }\n  handleRoomCreation(name){\n    socket.emit('room_creation', {name: name, location: this.state.location});\n  }\n\nrender() {\n  let current = this;\n  if (\"geolocation\" in navigator){\n    navigator.geolocation.getCurrentPosition(function(position) {\n      current.setState({location: {\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude\n        }\n      });\n    });\n  }\n    let messageList = this.state.messages.map((x, index) => {\n      return (\n        <div id=\"message-item\" key={index}> {x} </div>\n      );\n    });\n\n    let nameList = this.state.localUsers.map((x, index) => {\n      return (\n        <ListClickable isActive={this.state.activeName==x} id={index} key={index}\n          item={x} handleClick={this.selectName} />\n      );\n    });\n\n    let roomList = this.state.rooms.map((x, index)=>{\n      return (\n        <ListClickable isActive={this.state.activeRoom==x} id={index} key={index}\n        item={x} handleClick={this.selectRoom} />\n      );\n    });\n    return (\n      <div id=\"container\">\n      <div>\n      <Navbar color=\"faded\" light>\n        <NavbarBrand href=\"/\" className=\"mr-auto\">RadioChat</NavbarBrand>\n        <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\n        <Collapse isOpen={this.state.collapsed} navbar>\n          <div onClick={this.modalToggle}>Change Name</div>\n          <Modal isOpen={this.state.modal} toggle={this.modalToggle} className={this.props.className}>\n            <ModalHeader toggle={this.modalToggle}>Enter new name:</ModalHeader>\n            <ModalBody>\n              <Form>\n                <InputGroup id='nameInput'>\n                  <Input value={this.state.newName} onChange={e=>this.setState({newName: e.target.value})}/>\n                  <InputGroupAddon addonType=\"append\"><Button type='submit' onClick={this.handleNameChange}\n                    color=\"secondary\">Submit</Button>\n                  </InputGroupAddon>\n                </InputGroup>\n              </Form>\n            </ModalBody>\n          </Modal>\n          <ModalItem title='Enter room name:' handleClick={this.handleRoomCreation}/>\n        </Collapse>\n      </Navbar>\n    </div>\n    {!this.state.nameSuccess ? (\n      <Alert color=\"danger\" isOpen={!this.state.nameSuccess} toggle={this.onDismiss}>That name is already in use!\n      </Alert>) : <div></div>}\n        <div id=\"message-container\">\n          <div id=\"message-window\">\n            {messageList}\n          </div>\n          <div id='right-panel'>\n            <div id='user-list'>\n              {nameList}\n            </div>\n            <div id='room-list'>\n              {roomList}\n            </div>\n          </div>\n          <Form>\n            <InputGroup id='textInput'>\n              <Input id='textField' value={this.state.input} onChange={e=>this.setState({input: e.target.value})}/>\n              <InputGroupAddon addonType=\"append\"><Button type='submit' onClick={this.handleSend}\n                color=\"secondary\">Send</Button>\n              </InputGroupAddon>\n            </InputGroup>\n          </Form>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nclass ModalItem extends Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n      modal: false,\n      roomName: ''\n    };\n    this.modalToggle = this.modalToggle.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick(event){\n    event.preventDefault();\n    this.props.handleClick(this.state.roomName);\n    this.setState({roomName: ''});\n  }\n  modalToggle() {\n    this.setState({modal: !this.state.modal});\n  }\n  render(){\n    return(\n      <div>\n      <div onClick={this.modalToggle}>Create Room</div>\n      <Modal isOpen={this.state.modal} toggle={this.modalToggle} className={this.props.className}>\n        <ModalHeader toggle={this.modalToggle}>{this.props.title}</ModalHeader>\n        <ModalBody>\n          <Form>\n            <InputGroup id='roomInput'>\n              <Input value={this.state.roomName} onChange={e=>this.setState({roomName: e.target.value})}/>\n              <InputGroupAddon addonType=\"append\"><Button type='submit' onClick={this.handleClick}\n                color=\"secondary\">Submit</Button>\n              </InputGroupAddon>\n            </InputGroup>\n          </Form>\n        </ModalBody>\n      </Modal>\n      </div>\n    );\n  }\n}\nclass ListClickable extends Component{\n\n  handleClick(event){\n    this.props.handleClick(event.target.id);\n  }\n\n  render(){\n\n    return (\n      <div onClick={e => this.handleClick(e)} id={this.props.item}\n        className={this.props.isActive ? 'clickedItem' : ''}>{this.props.item}</div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}