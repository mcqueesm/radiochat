{"ast":null,"code":"import _toConsumableArray from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/RoseSamuel/Desktop/RadioChat/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, InputGroup, InputGroupText, InputGroupAddon, Collapse, CardBody, Card, Input, Form, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink } from 'reactstrap';\nimport * as io from 'socket.io-client';\nvar socket = io.connect('http://localhost:5000');\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      messages: [],\n      input: '',\n      id: '',\n      name: '',\n      userNames: [],\n      location: {\n        latitude: '',\n        longitude: ''\n      },\n      locationInterval: null,\n      collapse: false\n    };\n    _this.handleSend = _this.handleSend.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.beginLocationEmit = _this.beginLocationEmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate() {\n      var elem = document.getElementById('message-window');\n      elem.scrollTop = elem.scrollHeight;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var current = this;\n      socket.on('chat', function (msg) {\n        current.setState({\n          messages: [].concat(_toConsumableArray(current.state.messages), [msg])\n        });\n      });\n      socket.on('on_connection', function (userInfo) {\n        current.setState({\n          id: userInfo.id,\n          name: userInfo.name\n        }, current.beginLocationEmit());\n      });\n      socket.on('name_update', function (names) {\n        current.setState({\n          userNames: names\n        });\n      });\n    }\n  }, {\n    key: \"beginLocationEmit\",\n    value: function beginLocationEmit() {\n      var current = this;\n      this.setState({\n        locationInterval: setInterval(function () {\n          socket.emit('location_update', {\n            id: current.state.id,\n            location: current.state.location\n          });\n        }, 10000)\n      });\n    }\n  }, {\n    key: \"handleSend\",\n    value: function handleSend(event) {\n      event.preventDefault();\n      socket.emit('chat', this.state.input);\n      this.setState({\n        input: ''\n      });\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState(function (state) {\n        return {\n          collapse: !state.collapse\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var current = this;\n\n      if (\"geolocation\" in navigator) {\n        navigator.geolocation.getCurrentPosition(function (position) {\n          current.setState({\n            location: {\n              latitude: position.coords.latitude,\n              longitude: position.coords.longitude\n            }\n          });\n        });\n      }\n\n      var messageList = this.state.messages.map(function (x, index) {\n        return React.createElement(\"div\", {\n          id: \"message-item\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, \" \", x, \" \");\n      });\n      var nameList = this.state.userNames.map(function (x, index) {\n        return React.createElement(\"div\", {\n          id: \"name-item\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, \" \", x, \" \");\n      });\n      return React.createElement(\"div\", {\n        id: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        color: \"light\",\n        light: true,\n        expand: \"md\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(NavbarBrand, {\n        href: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"RadioChat\"), React.createElement(Nav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.toggle,\n        style: {\n          marginBottom: '1rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Toggle\"), React.createElement(Collapse, {\n        isOpen: this.state.collapse,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })))))), React.createElement(\"div\", {\n        id: \"message-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"message-window\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, messageList), React.createElement(\"div\", {\n        id: \"user-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, nameList), React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        id: \"textInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.input,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            input: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        onClick: this.handleSend,\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Send\"))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/RoseSamuel/Desktop/RadioChat/client/src/App.js"],"names":["React","Component","Button","InputGroup","InputGroupText","InputGroupAddon","Collapse","CardBody","Card","Input","Form","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","io","socket","connect","App","props","state","messages","input","id","name","userNames","location","latitude","longitude","locationInterval","collapse","handleSend","bind","beginLocationEmit","toggle","elem","document","getElementById","scrollTop","scrollHeight","current","on","msg","setState","userInfo","names","setInterval","emit","event","preventDefault","navigator","geolocation","getCurrentPosition","position","coords","messageList","map","x","index","nameList","marginBottom","e","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Button, InputGroup, InputGroupText, InputGroupAddon,\n    Collapse, CardBody, Card, Input, Form, Navbar,\n  NavbarToggler, NavbarBrand, Nav, NavItem, NavLink} from 'reactstrap';\nimport * as io from 'socket.io-client';\n\nconst socket = io.connect('http://localhost:5000');\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      messages: [],\n      input: '',\n      id: '',\n      name: '',\n      userNames: [],\n      location: {latitude: '', longitude: ''},\n      locationInterval: null,\n      collapse: false\n\n    };\n    this.handleSend = this.handleSend.bind(this);\n    this.beginLocationEmit = this.beginLocationEmit.bind(this);\n    this.toggle = this.toggle.bind(this);\n  }\n  componentWillUpdate(){\n    var elem = document.getElementById('message-window');\n    elem.scrollTop = elem.scrollHeight;\n  }\n  componentDidMount() {\n    let current = this;\n    socket.on('chat', function(msg){\n      current.setState({messages: [...current.state.messages, msg]});\n    });\n\n    socket.on('on_connection', function(userInfo){\n      current.setState({id: userInfo.id, name: userInfo.name}, current.beginLocationEmit());\n    });\n\n    socket.on('name_update', function(names){\n      current.setState({userNames: names});\n    });\n\n  }\n\n  beginLocationEmit() {\n    let current = this;\n    this.setState({locationInterval: setInterval(function(){\n      socket.emit('location_update', {id: current.state.id, location: current.state.location});\n    }, 10000\n\n    )});\n  }\n  handleSend(event) {\n    event.preventDefault();\n    socket.emit('chat', this.state.input);\n    this.setState({input: ''});\n\n  }\n\n  toggle() {\n    this.setState(state => ({ collapse: !state.collapse }));\n  }\n\nrender() {\n  let current = this;\n  if (\"geolocation\" in navigator){\n    navigator.geolocation.getCurrentPosition(function(position) {\n      current.setState({location: {\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude\n      }\n    });\n    });\n  }\n    let messageList = this.state.messages.map((x, index) => {\n      return (\n        <div id=\"message-item\" key={index}> {x} </div>\n      );\n    });\n\n    let nameList = this.state.userNames.map((x, index) => {\n      return (\n        <div id=\"name-item\" key={index}> {x} </div>\n      );\n    });\n\n    return (\n      <div id=\"container\">\n        <div>\n          <Navbar color=\"light\" light expand=\"md\">\n            <NavbarBrand href=\"/\">RadioChat</NavbarBrand>\n              <Nav>\n                <Button color=\"primary\" onClick={this.toggle} style={{ marginBottom: '1rem' }}>Toggle</Button>\n                <Collapse isOpen={this.state.collapse}>\n                  <Card>\n                    <CardBody>\n\n                    </CardBody>\n                    </Card>\n                    </Collapse>\n              </Nav>\n          </Navbar>\n        </div>\n        <div id=\"message-container\">\n          <div id=\"message-window\">\n            {messageList}\n          </div>\n          <div id=\"user-list\">\n            {nameList}\n          </div>\n          <Form>\n            <InputGroup id='textInput'>\n              <Input value={this.state.input} onChange={e=>this.setState({input: e.target.value})}/>\n              <InputGroupAddon addonType=\"append\"><Button type='submit' onClick={this.handleSend}\n                color=\"secondary\">Send</Button>\n              </InputGroupAddon>\n            </InputGroup>\n          </Form>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}