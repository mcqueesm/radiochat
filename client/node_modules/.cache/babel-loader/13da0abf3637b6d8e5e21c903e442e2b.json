{"ast":null,"code":"import _toConsumableArray from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/RoseSamuel/Desktop/RadioChat/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport * as io from 'socket.io-client';\nvar socket = io.connect('http://localhost:5000');\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      messages: ['cat', 'dog', 'meow', 'woof'],\n      input: '',\n      id: '',\n      name: '',\n      location: null\n    };\n    _this.handleSend = _this.handleSend.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var current = this;\n      socket.on('chat', function (msg) {\n        current.setState({\n          messages: [].concat(_toConsumableArray(current.state.messages), [msg])\n        });\n      });\n      socket.on('on_connection', function (userInfo) {\n        current.setState({\n          id: userInfo.id,\n          name: userInfo.name\n        });\n\n        if (\"geolocation\" in navigator) {\n          navigator.geolocation.watchPosition(function (position) {\n            current.setState({\n              location: {\n                latitude: position.coords.latitude,\n                longitutde: position.coords.longitude\n              }\n            });\n          });\n        }\n      });\n    }\n  }, {\n    key: \"handleSend\",\n    value: function handleSend(event) {\n      event.preventDefault();\n      console.log(this.state.input);\n      socket.emit('chat', this.state.input);\n      this.setState({\n        input: ''\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var messageList = this.state.messages.map(function (x, index) {\n        return React.createElement(\"div\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, \" \", x, \" \");\n      });\n      return React.createElement(\"div\", {\n        id: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"message-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, messageList, \"Latitude: \", this.state.location.latitude, \"Longitude: \", this.state.location.longitude), React.createElement(\"form\", {\n        id: \"message-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"message-input\",\n        type: \"text\",\n        value: this.state.input,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            input: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: \"message-submit\",\n        type: \"submit\",\n        value: \"Send\",\n        onClick: this.handleSend,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/RoseSamuel/Desktop/RadioChat/client/src/App.js"],"names":["React","Component","io","socket","connect","App","props","state","messages","input","id","name","location","handleSend","bind","current","on","msg","setState","userInfo","navigator","geolocation","watchPosition","position","latitude","coords","longitutde","longitude","event","preventDefault","console","log","emit","messageList","map","x","index","e","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport './App.css';\nimport * as io from 'socket.io-client';\n\nconst socket = io.connect('http://localhost:5000');\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      messages: ['cat', 'dog', 'meow', 'woof'],\n      input: '',\n      id: '',\n      name: '',\n      location: null\n\n    };\n    this.handleSend = this.handleSend.bind(this);\n  }\n\n\n  componentDidMount() {\n    let current = this;\n    socket.on('chat', function(msg){\n      current.setState({messages: [...current.state.messages, msg]});\n    });\n\n    socket.on('on_connection', function(userInfo){\n      current.setState({id: userInfo.id, name: userInfo.name});\n\n    if (\"geolocation\" in navigator){\n      navigator.geolocation.watchPosition(function(position) {\n        current.setState({location: {\n          latitude: position.coords.latitude,\n          longitutde: position.coords.longitude}\n        });\n      });\n    }\n    });\n  }\n  handleSend(event) {\n    event.preventDefault();\n    console.log(this.state.input);\n    socket.emit('chat', this.state.input);\n    this.setState({input: ''});\n  }\n\nrender() {\n    let messageList = this.state.messages.map((x, index) => {\n      return (\n        <div key={index}> {x} </div>\n      );\n    });\n    return (\n      <div id=\"container\">\n        <div id=\"message-container\">\n          {messageList}\n          Latitude: {this.state.location.latitude}\n          Longitude: {this.state.location.longitude}\n        </div>\n        <form id='message-form'>\n          <input id='message-input' type='text' value={this.state.input} onChange={e => this.setState({input: e.target.value})} />\n          <input id='message-submit' type='submit' value='Send' onClick={this.handleSend} />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}