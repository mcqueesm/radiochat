{"ast":null,"code":"import _toConsumableArray from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/RoseSamuel/Desktop/RadioChat/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css'; //Bootstrap used by Reactstrap\n\nimport 'bootstrap/dist/css/bootstrap.min.css'; //Reactstrap components\n\nimport { Alert, Button, InputGroup, InputGroupText, InputGroupAddon, Collapse, CardBody, Card, Input, Form, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, Dropdown, DropdownMenu, DropdownToggle, Modal, ModalHeader, ModalBody, ModalFooter, Fade } from 'reactstrap'; //Create client side socket\n\nimport * as io from 'socket.io-client';\nvar socket = io.connect('http://localhost:5000'); //Main component for RadioChat\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      //All local messages\n      messages: [],\n      //All room messages (deleted upon leaving room)\n      roomMessages: [],\n      //Stores message input\n      input: '',\n      //Your socket.id\n      id: '',\n      //Your current name\n      name: '',\n      //List of local names based on your radius\n      localUsers: [],\n      //Local rooms based on radius\n      rooms: [],\n      //Names of users in current room\n      roomNames: [],\n      //Stores 'change name' input\n      newName: '',\n      //Your current latitude longitude\n      location: {\n        latitude: '',\n        longitude: ''\n      },\n      //Holds id of setInterval that periodically emits location and other info to server\n      locationInterval: null,\n      //Chat radius\n      radius: 1,\n      //False if modal closed, true if open\n      modal: false,\n      //On failure set to false, causing alert to render\n      nameSuccess: true,\n      //Name of user currently clicked on (for PM)\n      activeName: null,\n      //Name of current room\n      activeRoom: null,\n      fadeIn: false\n    }; //bind 'this' to component functions\n\n    _this.handleSend = _this.handleSend.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.beginLocationEmit = _this.beginLocationEmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.modalToggle = _this.modalToggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleNameChange = _this.handleNameChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onDismiss = _this.onDismiss.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.setName = _this.setName.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.selectName = _this.selectName.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleRoomCreation = _this.handleRoomCreation.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.selectRoom = _this.selectRoom.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.setChatRadius = _this.setChatRadius.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleFade = _this.toggleFade.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addMessage = _this.addMessage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addRoomMessage = _this.addRoomMessage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate() {\n      //Cause message window to scroll automatically for message overflow\n      var elem = document.getElementById('message-window');\n      elem.scrollTop = elem.scrollHeight;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var current = this;\n      /* This listener called when current chat room is no longer within client's\n      chat radius and they have left the room*/\n\n      socket.on('force_leave', function () {\n        current.setState({\n          activeRoom: null\n        });\n      }); //Listener for messages emitted from current room\n\n      socket.on('room_chat', this.addRoomMessage); //Once connected client begins emitting location info\n\n      socket.on('on_connection', function (userInfo) {\n        //socket id received from server\n        current.setState({\n          id: userInfo.id\n        }, function () {\n          //emit location and set name received from server\n          current.beginLocationEmit();\n          current.setName(userInfo.name);\n        });\n      }); //Room name already exists\n\n      socket.on('room_fail', function () {\n        console.log('This name already exists');\n      });\n      /*Receive warnings and notifications from server\n      'obj' keys: message - message from server\n                  type - string indicating type of message for styling purposes:\n                        'error': indicates error\n      */\n\n      socket.on('server_message', function (obj) {\n        var message = \"<div class='\" + obj.type + \"'>\" + obj.message + \"</div>\";\n        current.setState({\n          messages: [].concat(_toConsumableArray(current.state.messages), [message])\n        });\n      });\n      socket.on('change_name_result', function (result) {\n        if (!result.success) {\n          current.setState({\n            nameSuccess: result.success\n          }, function () {\n            console.log(current.state.nameSuccess);\n          });\n          current.toggleFade();\n          var intervalID1 = setInterval(function () {\n            current.toggleFade();\n            clearInterval(intervalID1);\n          }, 3000);\n          var intervalID2 = setInterval(function () {\n            current.setState({\n              nameSuccess: true\n            });\n            clearInterval(intervalID2);\n          }, 4000);\n        } else {\n          current.setState({\n            name: result.name\n          }, function () {\n            console.log(\"My name changed to \", current.state.name);\n          });\n        }\n      });\n      socket.on('locals', function (obj) {\n        current.setState({\n          rooms: obj.rooms,\n          roomNames: obj.roomNames\n        });\n        var noLonger = current.state.localUsers.filter(function (x) {\n          return !obj.names.includes(x);\n        });\n        var newUsers = obj.names.filter(function (x) {\n          return !current.state.localUsers.includes(x);\n        });\n        current.setState({\n          localUsers: obj.names\n        });\n\n        if (noLonger) {\n          noLonger.forEach(function (x) {\n            socket.off(x, current.addMessage);\n          });\n\n          if (newUsers) {\n            newUsers.forEach(function (x) {\n              socket.on(x, current.addMessage);\n            });\n          }\n        }\n\n        console.log(\"These are my local users: \", current.state.localUsers);\n        console.log(\"These are my local rooms: \", current.state.rooms);\n      });\n      socket.on('private', function (obj) {\n        var message = \"<span class='privateStyle'>\" + obj.name + \"</span>\" + ': ' + obj.msg;\n        current.setState({\n          messages: [].concat(_toConsumableArray(current.state.messages), [message]),\n          roomMessages: [].concat(_toConsumableArray(current.state.roomMessages), [message])\n        });\n      });\n    }\n  }, {\n    key: \"addRoomMessage\",\n    value: function addRoomMessage(obj) {\n      var message = \"<span class='nameStyle'>\" + obj.name + \"</span>\" + ': ' + obj.msg;\n      this.setState({\n        roomMessages: [].concat(_toConsumableArray(this.state.roomMessages), [message])\n      });\n    }\n  }, {\n    key: \"addMessage\",\n    value: function addMessage(obj) {\n      var message = \"<span class='nameStyle'>\" + obj.name + \"</span>\" + ': ' + obj.msg;\n      this.setState({\n        messages: [].concat(_toConsumableArray(this.state.messages), [message])\n      });\n    }\n  }, {\n    key: \"setName\",\n    value: function setName(name) {\n      var current = this;\n      current.setState({\n        name: name\n      });\n    }\n  }, {\n    key: \"beginLocationEmit\",\n    value: function beginLocationEmit() {\n      var current = this;\n      this.setState({\n        locationInterval: setInterval(function () {\n          socket.emit('location_update', {\n            id: current.state.id,\n            location: current.state.location,\n            room: current.state.activeRoom,\n            radius: current.state.radius\n          });\n        }, 3000)\n      });\n    }\n  }, {\n    key: \"handleSend\",\n    value: function handleSend(event) {\n      console.log('activeName: ', this.state.activeName);\n      console.log('activeRoom: ', this.state.activeRoom);\n      event.preventDefault();\n\n      if (this.state.activeName) {\n        console.log('in first if');\n        socket.emit('private', {\n          msg: this.state.input,\n          recipient: this.state.activeName,\n          name: this.state.name\n        });\n      } else if (this.state.activeRoom) {\n        console.log('in second if');\n        socket.emit('room_chat', {\n          msg: this.state.input,\n          room: this.state.activeRoom\n        });\n      } else if (!this.state.activeName) {\n        console.log('in third if');\n        socket.emit(this.state.name, {\n          msg: this.state.input,\n          name: this.state.name\n        });\n      }\n\n      this.setState({\n        input: ''\n      });\n    }\n  }, {\n    key: \"modalToggle\",\n    value: function modalToggle() {\n      this.setState({\n        modal: !this.state.modal\n      });\n    }\n  }, {\n    key: \"handleNameChange\",\n    value: function handleNameChange(event) {\n      event.preventDefault();\n      socket.emit('change_name', this.state.newName);\n      this.setState({\n        newName: '',\n        modal: !this.state.modal\n      });\n    }\n  }, {\n    key: \"onDismiss\",\n    value: function onDismiss() {\n      this.setState({\n        nameSuccess: true\n      });\n    }\n  }, {\n    key: \"selectName\",\n    value: function selectName(name) {\n      var _this2 = this;\n\n      console.log('in select name, name is ', name);\n      this.setState(function (_ref) {\n        var activeName = _ref.activeName;\n\n        if (activeName === name || name === _this2.state.name) {\n          return {\n            activeName: null\n          };\n        }\n\n        return {\n          activeName: name\n        };\n      });\n    }\n  }, {\n    key: \"selectRoom\",\n    value: function selectRoom(name) {\n      var current = this;\n      this.setState({\n        roomMessages: []\n      });\n      this.setState(function (_ref2) {\n        var activeRoom = _ref2.activeRoom;\n\n        if (activeRoom) {\n          socket.emit('leave_room', {\n            room: name,\n            name: current.state.name\n          });\n        }\n\n        if (activeRoom === name) {\n          return {\n            activeRoom: null\n          };\n        } else {\n          socket.emit('join_room', {\n            room: name,\n            name: current.state.name\n          });\n          return {\n            activeRoom: name\n          };\n        }\n      });\n    }\n  }, {\n    key: \"handleRoomCreation\",\n    value: function handleRoomCreation(name) {\n      socket.emit('room_creation', {\n        name: name,\n        location: this.state.location\n      });\n    }\n  }, {\n    key: \"setChatRadius\",\n    value: function setChatRadius(rad) {\n      this.setState({\n        radius: rad\n      });\n      console.log(rad);\n    }\n  }, {\n    key: \"toggleFade\",\n    value: function toggleFade() {\n      this.setState({\n        fadeIn: !this.state.fadeIn\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var current = this;\n\n      if (\"geolocation\" in navigator) {\n        navigator.geolocation.getCurrentPosition(function (position) {\n          current.setState({\n            location: {\n              latitude: position.coords.latitude,\n              longitude: position.coords.longitude\n            }\n          });\n        });\n      }\n\n      var messageList = this.state.messages.map(function (x, index) {\n        return React.createElement(\"div\", {\n          className: \"message-item\",\n          key: index,\n          dangerouslySetInnerHTML: {\n            __html: x\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260\n          },\n          __self: this\n        });\n      });\n      var roomMessageList = this.state.roomMessages.map(function (x, index) {\n        return React.createElement(\"div\", {\n          className: \"message-item\",\n          key: index,\n          dangerouslySetInnerHTML: {\n            __html: x\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265\n          },\n          __self: this\n        });\n      });\n      var nameList = this.state.localUsers.map(function (x, index) {\n        return React.createElement(\"div\", {\n          className: \"clickable\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270\n          },\n          __self: this\n        }, React.createElement(ListClickable, {\n          isActive: _this3.state.activeName == x,\n          id: index,\n          key: index,\n          item: x,\n          handleClick: _this3.selectName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270\n          },\n          __self: this\n        }));\n      });\n      var roomNameList = this.state.roomNames.map(function (x, index) {\n        return React.createElement(\"div\", {\n          className: \"clickable\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276\n          },\n          __self: this\n        }, React.createElement(ListClickable, {\n          isActive: _this3.state.activeName == x,\n          id: index,\n          key: index,\n          item: x,\n          handleClick: _this3.selectName,\n          className: \"clickable\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276\n          },\n          __self: this\n        }));\n      });\n      var roomList = this.state.rooms.map(function (x, index) {\n        return React.createElement(ListClickable, {\n          isActive: _this3.state.activeRoom == x,\n          id: index,\n          key: index,\n          item: x,\n          handleClick: _this3.selectRoom,\n          className: \"clickable\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        id: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"navigation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        color: \"faded\",\n        light: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(NavbarBrand, {\n        className: \"mr-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, \"RadioChat\"), React.createElement(Nav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        className: \"nav-items\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onClick: this.modalToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, \"Change Name\"), React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.modalToggle,\n        className: this.props.className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.modalToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, \"Enter new name:\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        id: \"nameInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.newName,\n        onChange: function onChange(e) {\n          return _this3.setState({\n            newName: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        onClick: this.handleNameChange,\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, \"Submit\"))))))), React.createElement(NavItem, {\n        className: \"nav-items\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, React.createElement(ModalItem, {\n        btnText: \"Create Room\",\n        title: \"Enter room name:\",\n        handleClick: this.handleRoomCreation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      })), React.createElement(NavItem, {\n        className: \"nav-items\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, React.createElement(ModalItem, {\n        btnText: \"Chat Radius\",\n        title: \"Set chat radius (miles): \",\n        isRange: true,\n        setChatRadius: this.setChatRadius,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }))))), !this.state.nameSuccess ? React.createElement(Fade, {\n        in: this.state.fadeIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, React.createElement(Alert, {\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, \"That name is already in use!\")) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"message-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"message-window\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, this.state.activeRoom ? roomMessageList : messageList), React.createElement(\"div\", {\n        id: \"right-panel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"user-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"headings\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, \"Guests\"), this.state.activeRoom ? roomNameList : nameList), React.createElement(\"div\", {\n        id: \"room-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"headings\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, \"Rooms\"), roomList)), React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        id: \"textInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, React.createElement(Input, {\n        id: \"textField\",\n        value: this.state.input,\n        onChange: function onChange(e) {\n          return _this3.setState({\n            input: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        onClick: this.handleSend,\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, \"Send\"))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar ModalItem =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(ModalItem, _Component2);\n\n  function ModalItem(props) {\n    var _this4;\n\n    _classCallCheck(this, ModalItem);\n\n    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(ModalItem).call(this, props));\n    _this4.state = {\n      modal: false,\n      roomName: '',\n      radius: 1\n    };\n    _this4.modalToggle = _this4.modalToggle.bind(_assertThisInitialized(_assertThisInitialized(_this4)));\n    _this4.handleClick = _this4.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this4)));\n    _this4.handleChange = _this4.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this4)));\n    return _this4;\n  }\n\n  _createClass(ModalItem, [{\n    key: \"handleClick\",\n    value: function handleClick(event) {\n      event.preventDefault();\n      this.props.handleClick(this.state.roomName);\n      this.setState({\n        roomName: ''\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var _this5 = this;\n\n      this.setState({\n        radius: event.target.value\n      }, function () {\n        _this5.props.setChatRadius(_this5.state.radius);\n      });\n    }\n  }, {\n    key: \"modalToggle\",\n    value: function modalToggle() {\n      this.setState({\n        modal: !this.state.modal\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onClick: this.modalToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, this.props.btnText), React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.modalToggle,\n        className: this.props.className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.modalToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, this.props.title, this.props.isRange ? this.state.radius : ''), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        id: \"roomInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }, this.props.isRange ? React.createElement(\"div\", {\n        className: \"rangeDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }, \"0.1\"), React.createElement(\"input\", {\n        className: \"rangeInput\",\n        type: \"range\",\n        min: \"0.1\",\n        max: \"1\",\n        step: \"0.1\",\n        onChange: function onChange(e) {\n          return _this6.handleChange(e);\n        },\n        value: this.state.radius,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, \"1.0\")) : React.createElement(Input, {\n        value: this.state.roomName,\n        onChange: function onChange(e) {\n          return _this6.setState({\n            roomName: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }), this.props.isRange ? '' : React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        onClick: this.handleClick,\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      }, \"Submit\")))))));\n    }\n  }]);\n\n  return ModalItem;\n}(Component);\n\nvar ListClickable =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(ListClickable, _Component3);\n\n  function ListClickable() {\n    _classCallCheck(this, ListClickable);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ListClickable).apply(this, arguments));\n  }\n\n  _createClass(ListClickable, [{\n    key: \"handleClick\",\n    value: function handleClick(event) {\n      this.props.handleClick(event.target.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      return React.createElement(\"div\", {\n        onClick: function onClick(e) {\n          return _this7.handleClick(e);\n        },\n        id: this.props.item,\n        className: this.props.isActive ? 'clickedItem' : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, this.props.item);\n    }\n  }]);\n\n  return ListClickable;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/RoseSamuel/Desktop/RadioChat/client/src/App.js"],"names":["React","Component","Alert","Button","InputGroup","InputGroupText","InputGroupAddon","Collapse","CardBody","Card","Input","Form","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","Dropdown","DropdownMenu","DropdownToggle","Modal","ModalHeader","ModalBody","ModalFooter","Fade","io","socket","connect","App","props","state","messages","roomMessages","input","id","name","localUsers","rooms","roomNames","newName","location","latitude","longitude","locationInterval","radius","modal","nameSuccess","activeName","activeRoom","fadeIn","handleSend","bind","beginLocationEmit","modalToggle","handleNameChange","onDismiss","setName","selectName","handleRoomCreation","selectRoom","setChatRadius","toggleFade","addMessage","addRoomMessage","elem","document","getElementById","scrollTop","scrollHeight","current","on","setState","userInfo","console","log","obj","message","type","result","success","intervalID1","setInterval","clearInterval","intervalID2","noLonger","filter","x","names","includes","newUsers","forEach","off","msg","emit","room","event","preventDefault","recipient","rad","navigator","geolocation","getCurrentPosition","position","coords","messageList","map","index","__html","roomMessageList","nameList","roomNameList","roomList","className","e","target","value","ModalItem","roomName","handleClick","handleChange","btnText","title","isRange","ListClickable","item","isActive"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport './App.css';\n//Bootstrap used by Reactstrap\nimport 'bootstrap/dist/css/bootstrap.min.css';\n//Reactstrap components\nimport {Alert, Button, InputGroup, InputGroupText, InputGroupAddon,\n    Collapse, CardBody, Card, Input, Form, Navbar,\n    NavbarToggler, NavbarBrand, Nav, NavItem, NavLink,\n    Dropdown, DropdownMenu, DropdownToggle, Modal, ModalHeader,\n    ModalBody, ModalFooter, Fade} from 'reactstrap';\n\n//Create client side socket\nimport * as io from 'socket.io-client';\nconst socket = io.connect('http://localhost:5000');\n\n//Main component for RadioChat\nclass App extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      //All local messages\n      messages: [],\n      //All room messages (deleted upon leaving room)\n      roomMessages: [],\n      //Stores message input\n      input: '',\n      //Your socket.id\n      id: '',\n      //Your current name\n      name: '',\n      //List of local names based on your radius\n      localUsers: [],\n      //Local rooms based on radius\n      rooms: [],\n      //Names of users in current room\n      roomNames: [],\n      //Stores 'change name' input\n      newName:'',\n      //Your current latitude longitude\n      location: {latitude: '', longitude: ''},\n      //Holds id of setInterval that periodically emits location and other info to server\n      locationInterval: null,\n      //Chat radius\n      radius: 1,\n      //False if modal closed, true if open\n      modal: false,\n      //On failure set to false, causing alert to render\n      nameSuccess: true,\n      //Name of user currently clicked on (for PM)\n      activeName: null,\n      //Name of current room\n      activeRoom: null,\n      fadeIn: false\n\n    };\n    //bind 'this' to component functions\n    this.handleSend = this.handleSend.bind(this);\n    this.beginLocationEmit = this.beginLocationEmit.bind(this);\n    this.modalToggle = this.modalToggle.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.onDismiss = this.onDismiss.bind(this);\n    this.setName = this.setName.bind(this);\n    this.selectName = this.selectName.bind(this);\n    this.handleRoomCreation = this.handleRoomCreation.bind(this);\n    this.selectRoom = this.selectRoom.bind(this);\n    this.setChatRadius = this.setChatRadius.bind(this);\n    this.toggleFade = this.toggleFade.bind(this);\n    this.addMessage = this.addMessage.bind(this);\n    this.addRoomMessage = this.addRoomMessage.bind(this);\n  }\n  componentWillUpdate(){\n    //Cause message window to scroll automatically for message overflow\n    var elem = document.getElementById('message-window');\n    elem.scrollTop = elem.scrollHeight;\n  }\n  componentDidMount() {\n    let current = this;\n\n    /* This listener called when current chat room is no longer within client's\n    chat radius and they have left the room*/\n    socket.on('force_leave', function(){\n      current.setState({activeRoom: null});\n    });\n    //Listener for messages emitted from current room\n    socket.on('room_chat', this.addRoomMessage);\n    //Once connected client begins emitting location info\n    socket.on('on_connection', function(userInfo){\n      //socket id received from server\n      current.setState({id: userInfo.id}, () => {\n        //emit location and set name received from server\n        current.beginLocationEmit();\n        current.setName(userInfo.name);\n      });\n    });\n    //Room name already exists\n    socket.on('room_fail', function(){\n      console.log('This name already exists');\n    });\n    /*Receive warnings and notifications from server\n    'obj' keys: message - message from server\n                type - string indicating type of message for styling purposes:\n                      'error': indicates error\n    */\n    socket.on('server_message', function(obj){\n      let message = \"<div class='\" + obj.type + \"'>\" + obj.message + \"</div>\";\n      current.setState({messages: [...current.state.messages, message]});\n    });\n\n    socket.on('change_name_result', function(result){\n\n      if (!result.success){\n        current.setState({nameSuccess: result.success}, ()=>{console.log(current.state.nameSuccess)});\n        current.toggleFade();\n        let intervalID1 = setInterval(()=>{\n          current.toggleFade();\n          clearInterval(intervalID1);\n        }, 3000);\n        let intervalID2 = setInterval(()=>{\n          current.setState({nameSuccess: true});\n          clearInterval(intervalID2);\n        }, 4000);\n      }\n      else{\n        current.setState({name: result.name}, () => {console.log(\"My name changed to \", current.state.name)});\n      }\n    });\n\n    socket.on('locals', function(obj){\n      current.setState({rooms: obj.rooms, roomNames: obj.roomNames});\n      let noLonger = current.state.localUsers.filter(x => !obj.names.includes(x));\n      let newUsers = obj.names.filter(x => !current.state.localUsers.includes(x));\n      current.setState({localUsers: obj.names});\n      if (noLonger){\n        noLonger.forEach(x => {\n          socket.off(x, current.addMessage);\n        });\n      if (newUsers){\n        newUsers.forEach(x => {\n          socket.on(x, current.addMessage);\n        });\n      }\n      }\n      console.log(\"These are my local users: \", current.state.localUsers);\n      console.log(\"These are my local rooms: \", current.state.rooms);\n    });\n\n    socket.on('private', function(obj){\n      let message = \"<span class='privateStyle'>\" + obj.name + \"</span>\" + ': ' +obj.msg;\n      current.setState(\n        {messages: [...current.state.messages, message],\n        roomMessages: [...current.state.roomMessages, message]\n      }\n      );\n    });\n\n  }\n  addRoomMessage(obj){\n    let message = \"<span class='nameStyle'>\" + obj.name + \"</span>\" + ': ' +obj.msg;\n    this.setState({roomMessages: [...this.state.roomMessages, message]});\n  }\n  addMessage(obj){\n    let message = \"<span class='nameStyle'>\" + obj.name + \"</span>\" + ': ' +obj.msg;\n    this.setState({messages: [...this.state.messages, message]});\n  }\n  setName(name) {\n    let current = this;\n    current.setState({name: name});\n  }\n\n  beginLocationEmit() {\n    let current = this;\n    this.setState({locationInterval: setInterval(function(){\n      socket.emit('location_update', {id: current.state.id, location: current.state.location,\n      room: current.state.activeRoom, radius: current.state.radius});\n    }, 3000\n    )});\n  }\n  handleSend(event) {\n    console.log('activeName: ', this.state.activeName);\n    console.log('activeRoom: ', this.state.activeRoom);\n    event.preventDefault();\n    if(this.state.activeName){\n      console.log('in first if');\n      socket.emit('private', {msg: this.state.input, recipient: this.state.activeName,\n        name: this.state.name});\n    }\n    else if(this.state.activeRoom){\n      console.log('in second if');\n      socket.emit('room_chat', {msg: this.state.input, room:this.state.activeRoom});\n    }\n    else if(!this.state.activeName){\n      console.log('in third if');\n      socket.emit(this.state.name, {msg: this.state.input, name: this.state.name});\n    }\n    this.setState({input: ''});\n  }\n  modalToggle() {\n    this.setState({modal: !this.state.modal});\n  }\n  handleNameChange(event) {\n    event.preventDefault();\n    socket.emit('change_name', this.state.newName);\n    this.setState({newName: '', modal: !this.state.modal});\n  }\n  onDismiss() {\n    this.setState({ nameSuccess: true });\n  }\n  selectName(name){\n    console.log('in select name, name is ', name);\n    this.setState( ({activeName}) => {\n      if(activeName===name || name===this.state.name){\n        return {activeName: null};\n      }\n      return {activeName: name};\n    });\n  }\n  selectRoom(name){\n    let current = this;\n    this.setState({roomMessages: []});\n    this.setState( ({activeRoom}) => {\n      if(activeRoom){\n        socket.emit('leave_room', {room: name, name: current.state.name});\n      }\n      if(activeRoom===name){\n        return {activeRoom: null};\n      }\n      else{\n        socket.emit('join_room', {room: name, name: current.state.name} );\n        return {activeRoom: name};\n      }\n    });\n  }\n  handleRoomCreation(name){\n    socket.emit('room_creation', {name: name, location: this.state.location});\n  }\n  setChatRadius(rad){\n    this.setState({radius: rad});\n    console.log(rad);\n  }\n  toggleFade() {\n    this.setState({\n        fadeIn: !this.state.fadeIn\n    });\n  }\nrender() {\n  let current = this;\n  if (\"geolocation\" in navigator){\n    navigator.geolocation.getCurrentPosition(function(position) {\n      current.setState({location: {\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude\n        }\n      });\n    });\n  }\n    let messageList = this.state.messages.map((x, index) => {\n      return (\n        <div className=\"message-item\" key={index} dangerouslySetInnerHTML={{__html: x}} />\n      );\n    });\n    let roomMessageList = this.state.roomMessages.map((x, index)=>{\n      return (\n        <div className=\"message-item\" key={index} dangerouslySetInnerHTML={{__html: x}} />\n      );\n    });\n    let nameList = this.state.localUsers.map((x, index) => {\n      return (\n        <div className='clickable'><ListClickable isActive={this.state.activeName==x} id={index} key={index}\n          item={x} handleClick={this.selectName} /></div>\n      );\n    });\n    let roomNameList = this.state.roomNames.map((x, index) => {\n      return (\n        <div className='clickable'><ListClickable isActive={this.state.activeName==x} id={index} key={index}\n          item={x} handleClick={this.selectName} className='clickable'/></div>\n      );\n    });\n\n    let roomList = this.state.rooms.map((x, index)=>{\n      return (\n        <ListClickable isActive={this.state.activeRoom==x} id={index} key={index}\n        item={x} handleClick={this.selectRoom} className='clickable' />\n      );\n    });\n    return (\n      <div id=\"container\">\n      <div className='navigation' >\n      <Navbar color=\"faded\" light >\n        <NavbarBrand className=\"mr-auto\">RadioChat</NavbarBrand>\n          <Nav>\n          <NavItem className='nav-items'>\n          <div onClick={this.modalToggle}>Change Name</div>\n          <Modal isOpen={this.state.modal} toggle={this.modalToggle} className={this.props.className}>\n            <ModalHeader toggle={this.modalToggle}>Enter new name:</ModalHeader>\n            <ModalBody>\n              <Form>\n                <InputGroup id='nameInput'>\n                  <Input value={this.state.newName} onChange={e=>this.setState({newName: e.target.value})}/>\n                  <InputGroupAddon addonType=\"append\"><Button type='submit' onClick={this.handleNameChange}\n                    color=\"secondary\">Submit</Button>\n                  </InputGroupAddon>\n                </InputGroup>\n              </Form>\n            </ModalBody>\n          </Modal>\n          </NavItem>\n          <NavItem className='nav-items'>\n          <ModalItem  btnText='Create Room' title='Enter room name:' handleClick={this.handleRoomCreation}/>\n          </NavItem>\n          <NavItem className='nav-items'>\n          <ModalItem btnText='Chat Radius' title='Set chat radius (miles): ' isRange={true}\n            setChatRadius={this.setChatRadius}/>\n          </NavItem>\n          </Nav>\n      </Navbar>\n    </div>\n\n    {!this.state.nameSuccess ? (<Fade in={this.state.fadeIn}>\n      <Alert color=\"danger\" >That name is already in use!\n      </Alert></Fade>) : <div></div>}\n        <div id=\"message-container\">\n          <div id=\"message-window\">\n            {this.state.activeRoom ? roomMessageList : messageList}\n          </div>\n          <div id='right-panel'>\n            <div id='user-list'>\n              <div className='headings'>Guests</div>\n              {this.state.activeRoom ? roomNameList : nameList}\n            </div>\n            <div id='room-list'>\n              <div className='headings'>Rooms</div>\n              {roomList}\n            </div>\n          </div>\n          <Form>\n            <InputGroup id='textInput'>\n              <Input id='textField' value={this.state.input} onChange={e=>this.setState({input: e.target.value})}/>\n              <InputGroupAddon addonType=\"append\"><Button type='submit' onClick={this.handleSend}\n                color=\"secondary\">Send</Button>\n              </InputGroupAddon>\n            </InputGroup>\n          </Form>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nclass ModalItem extends Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n      modal: false,\n      roomName: '',\n      radius: 1\n    };\n    this.modalToggle = this.modalToggle.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleClick(event){\n    event.preventDefault();\n    this.props.handleClick(this.state.roomName);\n    this.setState({roomName: ''});\n  }\n  handleChange(event){\n    this.setState({radius: event.target.value}, ()=>{\n      this.props.setChatRadius(this.state.radius);\n    });\n  }\n  modalToggle() {\n    this.setState({modal: !this.state.modal});\n  }\n  render(){\n    return(\n      <div>\n      <div onClick={this.modalToggle}>{this.props.btnText}</div>\n      <Modal isOpen={this.state.modal} toggle={this.modalToggle} className={this.props.className}>\n        <ModalHeader toggle={this.modalToggle}>{this.props.title}\n          {this.props.isRange ? this.state.radius : ''}</ModalHeader>\n        <ModalBody>\n          <Form>\n            <InputGroup id='roomInput'>\n              {this.props.isRange ? <div className='rangeDiv' ><label>0.1</label>\n              <input className='rangeInput' type='range' min='0.1' max='1' step='0.1'\n                onChange={e=>this.handleChange(e)} value={this.state.radius}/>\n              <label>1.0</label></div>:\n              <Input value={this.state.roomName} onChange={e=>this.setState({roomName: e.target.value})}/>}\n              {this.props.isRange ? '' : <InputGroupAddon addonType=\"append\"><Button type='submit' onClick={this.handleClick}\n                color=\"secondary\">Submit</Button>\n              </InputGroupAddon> }\n            </InputGroup>\n          </Form>\n        </ModalBody>\n      </Modal>\n      </div>\n    );\n  }\n}\nclass ListClickable extends Component{\n\n  handleClick(event){\n    this.props.handleClick(event.target.id);\n  }\n\n  render(){\n\n    return (\n      <div onClick={e => this.handleClick(e)} id={this.props.item}\n        className={this.props.isActive ? 'clickedItem' : ''}>{this.props.item}</div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}