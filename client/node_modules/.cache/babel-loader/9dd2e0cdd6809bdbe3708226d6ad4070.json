{"ast":null,"code":"import _toConsumableArray from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/RoseSamuel/Desktop/RadioChat/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/RoseSamuel/Desktop/RadioChat/client/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport * as io from 'socket.io-client';\nvar socket = io.connect('http://localhost:3000');\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      messages: ['cat', 'dog', 'meow', 'woof'],\n      input: 'hello'\n    };\n    _this.handleSend = _this.handleSend.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var current = this;\n      socket.on('chat', function (msg) {\n        current.setState({\n          messages: [].concat(_toConsumableArray(current.state.messages), [msg])\n        });\n      });\n    }\n  }, {\n    key: \"handleSend\",\n    value: function handleSend(event) {\n      event.preventDefault();\n      console.log(this.state.input);\n      socket.emit('chat', this.state.input);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var messageList = this.state.messages.map(function (x) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, \" \", x, \" \");\n      });\n      return React.createElement(\"div\", {\n        id: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"message-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        id: \"message-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, messageList)), React.createElement(\"form\", {\n        id: \"message-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"message-input\",\n        type: \"text\",\n        value: this.state.input,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            input: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        id: \"message-submit\",\n        type: \"button\",\n        onClick: this.handleSend,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \" Send\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/RoseSamuel/Desktop/RadioChat/client/src/App.js"],"names":["React","Component","io","socket","connect","App","props","state","messages","input","handleSend","bind","current","on","msg","setState","event","preventDefault","console","log","emit","messageList","map","x","e","target","value"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAIA,OAAO,WAAP;AACA,OAAO,KAAKC,EAAZ,MAAoB,kBAApB;AAEA,IAAMC,MAAM,GAAGD,EAAE,CAACE,OAAH,CAAW,uBAAX,CAAf;;IAEMC,G;;;;;AACJ,eAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,6EAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,EAAuB,MAAvB,CADC;AAEXC,MAAAA,KAAK,EAAE;AAFI,KAAb;AAKA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,uDAAlB;AARgB;AASjB;;;;wCAGmB;AAClB,UAAIC,OAAO,GAAG,IAAd;AACAT,MAAAA,MAAM,CAACU,EAAP,CAAU,MAAV,EAAkB,UAASC,GAAT,EAAa;AAC7BF,QAAAA,OAAO,CAACG,QAAR,CAAiB;AAACP,UAAAA,QAAQ,+BAAMI,OAAO,CAACL,KAAR,CAAcC,QAApB,IAA8BM,GAA9B;AAAT,SAAjB;AACD,OAFD;AAGD;;;+BACUE,K,EAAO;AAChBA,MAAAA,KAAK,CAACC,cAAN;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWE,KAAvB;AACAN,MAAAA,MAAM,CAACiB,IAAP,CAAY,MAAZ,EAAoB,KAAKb,KAAL,CAAWE,KAA/B;AACD;;;6BAEM;AAAA;;AACL,UAAIY,WAAW,GAAG,KAAKd,KAAL,CAAWC,QAAX,CAAoBc,GAApB,CAAwB,UAAAC,CAAC,EAAI;AAC7C,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAMA,CAAN,MADF;AAGD,OAJiB,CAAlB;AAKA,aACE;AAAK,QAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,EAAE,EAAC,mBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,EAAE,EAAC,cAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,WADH,CADF,CADF,EAME;AAAM,QAAA,EAAE,EAAC,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,EAAE,EAAC,eAAV;AAA0B,QAAA,IAAI,EAAC,MAA/B;AAAsC,QAAA,KAAK,EAAE,KAAKd,KAAL,CAAWE,KAAxD;AAA+D,QAAA,QAAQ,EAAE,kBAAAe,CAAC;AAAA,iBAAI,MAAI,CAACT,QAAL,CAAc;AAACN,YAAAA,KAAK,EAAEe,CAAC,CAACC,MAAF,CAASC;AAAjB,WAAd,CAAJ;AAAA,SAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAQ,QAAA,EAAE,EAAC,gBAAX;AAA4B,QAAA,IAAI,EAAC,QAAjC;AAA0C,QAAA,OAAO,EAAE,KAAKhB,UAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,CANF,CADF;AAcD;;;;EA7CeT,S;;AAgDlB,eAAeI,GAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport logo from './logo.svg';\n\nimport './App.css';\nimport * as io from 'socket.io-client';\n\nconst socket = io.connect('http://localhost:3000');\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      messages: ['cat', 'dog', 'meow', 'woof'],\n      input: 'hello'\n\n    };\n    this.handleSend = this.handleSend.bind(this);\n  }\n\n\n  componentDidMount() {\n    let current = this;\n    socket.on('chat', function(msg){\n      current.setState({messages: [...current.state.messages, msg]});\n    });\n  }\n  handleSend(event) {\n    event.preventDefault();\n    console.log(this.state.input);\n    socket.emit('chat', this.state.input);\n  }\n\nrender() {\n    let messageList = this.state.messages.map(x => {\n      return (\n        <li> {x} </li>\n      );\n    });\n    return (\n      <div id=\"container\">\n        <div id=\"message-container\">\n          <ul id=\"message-list\">\n            {messageList}\n          </ul>\n        </div>\n        <form id='message-form'>\n          <input id='message-input' type='text' value={this.state.input} onChange={e => this.setState({input: e.target.value})} />\n          <button id='message-submit' type='button' onClick={this.handleSend}> Send\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}